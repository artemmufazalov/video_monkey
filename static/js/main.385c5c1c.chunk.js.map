{"version":3,"sources":["assets/svgIcons/monkey-facing-right.svg","assets/svgIcons/user.svg","assets/svgIcons/shopping-cart.svg","assets/svgIcons/exclamation.svg","assets/svgIcons/checked.svg","assets/svgIcons/checkedGreen.svg","assets/preloader/Spinner-1.3s-200px.svg","assets/svgIcons/softwareLogo.svg","assets/svgIcons/instagram.svg","assets/svgIcons/vk.svg","assets/svgIcons/youtube.svg","assets/svgIcons/facebook.svg","assets/svgIcons/camera.svg","assets/svgIcons/computer.svg","assets/svgIcons/spin.svg","assets/svgIcons/video-camera.svg","assets/svgIcons/video-player.svg","assets/svgIcons/headphones.svg","assets/svgIcons/spinWithButton.svg","assets/photos/camera.jpg","assets/photos/laptop.jpg","assets/photos/workingPlace.jpg","assets/photos/alps.jpg","assets/photos/404notFound.jpg","assets/photos/community.png","assets/svgIcons/greenServerError.svg","assets/svgIcons/errorCross.svg","assets/svgIcons/registrationReject.svg","assets/svgIcons/submit.svg","components/Preloader/Preloader.module.css","components/Preloader/Preloader.jsx","components/Header/Header.jsx","components/Footer/Footer.jsx","pages/MainPage/MainPage.jsx","utils/validate/validate.js","utils/helpers/validateForm.js","pages/AuthPage/LoginPage/LoginForm.jsx","configs/configs.js","BLL/api/api.js","BLL/reducers/profileReducer.js","pages/AuthPage/LoginPage/LoginContainer.js","pages/AuthPage/RegisterPage/RegisterForm.jsx","pages/AuthPage/RegisterPage/RegisterContainer.js","pages/AuthPage/EmailConfirmation/EmailConfirmation.jsx","pages/AuthPage/EmailConfirmation/EmailConfirmationContainer.js","pages/AuthPage/AuthPage.jsx","BLL/reducers/cartReducer.js","BLL/store/store.js","pages/Profile/ProfilePage.jsx","pages/Profile/ProfilePageContainer.js","pages/Support/SupportPage.jsx","pages/Support/SupportPageContainer.js","pages/Presentation/PresentationPage.jsx","App.js","serviceWorker.js","index.js","assets/index.js","assets/svgIcons/gorilla.svg"],"names":["module","exports","Preloader","custom","className","large","src","preloader","classnames","styles","preloaderLarge","alt","defaultProps","Header","to","monkeyLogo","userIcon","shoppingCartIcon","Footer","headphonesIcon","href","target","rel","youtubeLogo","facebookLogo","vkLogo","instagramLogo","features","free","pro","MainPage","document","title","softwareLogo","cameraIcon","videoCameraIcon","spinWithButton","computerIcon","cameraImg","workingSpaceImg","laptopImg","map","text","checkedGreenIcon","emailValidationRegex","RegExp","passwordValidationRegexp","validate","isAuth","errors","values","rules","email","value","test","password","length","passwordRepeat","name","Object","keys","forEach","key","touched","LoginForm","props","handleChange","dirty","isSubmitting","handleBlur","handleSubmit","handleReset","isValid","isLoggedIn","isVerified","window","location","toString","includes","onFinish","Item","hasFeedback","help","validateStatus","validateForm","prefix","UserOutlined","size","placeholder","id","onChange","onBlur","LockOutlined","type","htmlType","onClick","disabled","isLoginFetching","loginError","loginErrorMessage","configs","axiosInstance","axios","baseURL","BASE_URL","headers","UserAPI","localStorage","token","defaults","common","authMe","get","then","response","data","status","catch","error","register","post","login","logout","delete","deleteUser","verifyUser","hash","cancelRegistration","resendConfirmationEmail","AUTH","LOGOUT","initialState","authUserData","registrationData","userHash","isRegistrationSuccessful","isRegistrationCancelSuccessful","authUserProfile","isFetching","isRegistrationFetching","isConfirmationFetching","isRegistrationCancelFetching","emailVerificationError","registrationCancelError","registrationError","registrationErrorMessage","profileReducer","state","action","isRegistrationError","message","isEmailVerificationError","isRegistrationCancelError","isLoginError","setRegistrationData","setRegistrationIsFetching","setEmailConfirmationIsFetching","setRegistrationSuccess","setRegistrationCancelIsFetching","setRegistrationError","setLoginError","setLoginIsFetching","setEmailVerificationError","authUser","formikConfig","enableReinitialize","mapPropsToValues","formikBag","compose","connect","userProfile","dispatch","a","responseData","resultCode","user","confirmed","withFormik","RegisterForm","MailOutlined","registerData","console","log","EmailConfirmationContentView","option","onCancelRegistration","onVerifyUser","InfoCircleOutlined","submitIcon","registrationReject","serverErrorIcon","errorCrossIcon","EmailConfirmation","EmailConfirmationContainer","React","memo","search","replace","resendVerificationEmail","useState","newOption","setOption","useEffect","withRouter","path","render","cartReducer","reducers","combineReducers","cart","store","createStore","applyMiddleware","thunkMiddleWare","_store","ProfilePage","TextArea","Input","SupportPage","onFormUpload","selectedOption","selectOption","attachedFiles","addFiles","Group","e","currentTarget","file","listType","defaultFileList","icon","UploadOutlined","CheckOutlined","SupportPageContainer","Slides","slideNumber","page","match","params","Number","NotFound","lazy","App","catchAllUnhandledErrors","alert","addEventListener","this","auth","removeEventListener","fallback","exact","Component","AppContainer","MonkeyApp","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.385c5c1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monkey-facing-right.14d7a4d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.c0278125.svg\";","module.exports = __webpack_public_path__ + \"static/media/shopping-cart.f9ab4a78.svg\";","module.exports = __webpack_public_path__ + \"static/media/exclamation.3f9c658a.svg\";","module.exports = __webpack_public_path__ + \"static/media/checked.4f7c9356.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkedGreen.09ffabe2.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.3s-200px.b4101e08.svg\";","module.exports = __webpack_public_path__ + \"static/media/softwareLogo.23372330.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.04f1d872.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk.ce6a386d.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.0f519090.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook.57d3f125.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.8621c6ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/computer.eb45b08f.svg\";","module.exports = __webpack_public_path__ + \"static/media/spin.6b00b179.svg\";","module.exports = __webpack_public_path__ + \"static/media/video-camera.fd4e80b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/video-player.103335e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/headphones.1e0687ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinWithButton.36aa2f92.svg\";","module.exports = __webpack_public_path__ + \"static/media/camera.4ba2ea38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/laptop.6c21452b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/workingPlace.ad6377fc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/alps.2a90d0a9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/404notFound.47231605.jpg\";","module.exports = __webpack_public_path__ + \"static/media/community.61f59112.png\";","module.exports = __webpack_public_path__ + \"static/media/greenServerError.2a9ca8a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/errorCross.e1563d44.svg\";","module.exports = __webpack_public_path__ + \"static/media/registrationReject.f3fa55a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/submit.a36b28ab.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderLarge\":\"Preloader_preloaderLarge__2rNhS\"};","import React from 'react';\r\nimport classnames from \"classnames\";\r\n\r\nimport styles from \"./Preloader.module.css\";\r\nimport {preloader} from \"../../assets\";\r\n\r\nconst Preloader = ({custom, className, large}) => {\r\n    return (\r\n        <img src={preloader}\r\n             className={classnames({\r\n                 [className]: custom,\r\n                 [styles.preloaderLarge]: !custom && large\r\n             })}\r\n             alt={\"Preloader\"}\r\n        />\r\n    );\r\n};\r\n\r\nPreloader.defaultProps = {\r\n    custom: false,\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport \"./Header.scss\";\r\nimport {monkeyLogo, shoppingCartIcon, userIcon} from \"../../assets\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <span className=\"header__left\">\r\n                <div className=\"header__left__appLogo\">\r\n                    <NavLink to={\"/\"}>\r\n                      <img src={monkeyLogo}\r\n                           alt={\"monkey logo\"}/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <NavLink to={\"/\"} className=\"header__left__appName\">Video Monkey</NavLink>\r\n\r\n            </span>\r\n\r\n            <span className=\"header__right\">\r\n                <div className={\"header__right__links\"}>\r\n                     <NavLink to={\"/products\"}>Продукты</NavLink>\r\n                     <NavLink to={\"/pricing\"}>Цены</NavLink>\r\n                     <NavLink to={\"/support\"}>Поддержка</NavLink>\r\n                </div>\r\n\r\n                <div className={\"header__right__icons\"}>\r\n                    <NavLink to={\"/profile\"}>\r\n                        <img src={userIcon} alt={\"user icon\"}/>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={\"/cart\"}>\r\n                        <img src={shoppingCartIcon} alt={\"shopping cart icon\"}/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n            </span>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport \"./Footer.scss\";\r\nimport {facebookLogo, headphonesIcon, instagramLogo, vkLogo, youtubeLogo} from \"../../assets\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className={\"footer\"}>\r\n            <div className={\"footer__left\"}>\r\n                <div className={\"footer__left__top\"}>\r\n                    <div className={\"footer__left__top__column\"}>\r\n                        <NavLink to={\"/products\"}>Продукты</NavLink>\r\n                        <NavLink to={\"/pricing\"}>Цены</NavLink>\r\n                    </div>\r\n                    <div className={\"footer__left__top__column\"}>\r\n                        <NavLink to={\"cart\"}>Корзина</NavLink>\r\n                        <NavLink to={\"profile\"}>Личный кабинет</NavLink>\r\n                    </div>\r\n                    <div className={\"footer__left__top__column\"}>\r\n                        <NavLink to={\"/contacts\"}>Контакты</NavLink>\r\n                        <NavLink to={\"/support\"}>Поддержка</NavLink>\r\n                    </div>\r\n                    <div className={\"footer__left__top__column\"}>\r\n                        <NavLink to={\"/about\"}>О нас</NavLink>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={\"footer__left__bottom\"}>\r\n                    <span className={\"footer__left__bottom__company\"}>Copyright © 2020, Video Monkey LLC. Все права защищены.</span>\r\n                    <div className={\"footer__left__bottom__number\"}>\r\n                        <span><img src={headphonesIcon} alt=\"headphones\"/></span>\r\n                        <span>8-800-525-12-21</span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={\"footer__right\"}>\r\n                <a href=\"https://www.youtube.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={youtubeLogo} alt=\"youtube\"/>\r\n                </a>\r\n                <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={facebookLogo} alt=\"facebook\"/>\r\n                </a>\r\n                <a href=\"https://vk.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={vkLogo} alt=\"vk\"/>\r\n                </a>\r\n                <a href=\"https://www.instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={instagramLogo} alt=\"instagram\"/>\r\n                </a>\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport \"./MainPage.scss\"\r\nimport {\r\n    cameraIcon,\r\n    cameraImg, checkedGreenIcon,\r\n    computerIcon, laptopImg,\r\n    softwareLogo,\r\n    spinWithButton,\r\n    videoCameraIcon,\r\n    workingSpaceImg\r\n} from \"../../assets\";\r\n\r\nconst features = {\r\n    free: [\"Профессиональные инструменты обработки фото и видео\",\r\n        \"Доступ ко всем инструментам сообщества\",\r\n        \"Более 100 продвинутых анимаций\"],\r\n    pro: [\"Профессиональные инструменты обработки фото и видео\",\r\n        \"Доступ ко всем инструментам сообщества\",\r\n        \"Более 200 продвинутых анимаций\",\r\n        \"Видеокурс по работе с программой от профессионалов компании\",\r\n        \"Круглосуточная техническая поддержка\",\r\n        \"Инструменты с использованием нейронных сетей для видеообработки нового уровня\"\r\n    ]\r\n}\r\n\r\nconst MainPage = () => {\r\n\r\n    document.title = \"Главная - Video Monkey\";\r\n\r\n    return (\r\n        <div className={\"mainPage\"}>\r\n            <section className={\"mainPage__top\"}>\r\n                <div className={\"mainPage__top__content\"}>\r\n                    <div className={\"mainPage__top__content__top\"}>\r\n                        <img src={softwareLogo} className={\"mainPage__top__content__top__logo\"} alt={\"software logo\"}/>\r\n                        <span className={\"mainPage__top__content__top__text\"}>\r\n                            <div className={\"mainPage__top__content__top__text__name\"}>Video Monkey 2020</div>\r\n                            <div className={\"mainPage__top__content__top__text__phrase\"}>\r\n                                Простой инструмент для выдающихся творений\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <NavLink to={\"/products\"}>\r\n                        <span className={\"mainPage__top__content__tryButton\"}>Попробовать бесплатно</span>\r\n                    </NavLink>\r\n                </div>\r\n            </section>\r\n\r\n            <section className={\"mainPage__features\"}>\r\n                <div className={\"mainPage__features__header\"}>\r\n                    Лучшее решение для хобби и творчества\r\n                </div>\r\n                <div className={\"mainPage__features__wrapper\"}>\r\n                    <div className={\"mainPage__features__wrapper__column\"}>\r\n                        <img src={cameraIcon} alt=\"camera\"/>\r\n                        <div>Обработка фотографий</div>\r\n                    </div>\r\n                    <div className={\"mainPage__features__wrapper__column\"}>\r\n                        <img src={videoCameraIcon} alt=\"video camera\"/>\r\n                        <div>Профессиональная обработка видео</div>\r\n                    </div>\r\n                    <div className={\"mainPage__features__wrapper__column\"}>\r\n                        <img src={spinWithButton} alt=\"spin with button\"/>\r\n                        <div>Конвертация разных форматов медиа файлов</div>\r\n                    </div>\r\n                    <div className={\"mainPage__features__wrapper__column\"}>\r\n                        <img src={computerIcon} alt=\"computer\"/>\r\n                        <div>Захват видео с экрана</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className={\"mainPage__photosAndText\"}>\r\n                <div className={\"mainPage__photosAndText__item\"}>\r\n                    <img src={cameraImg} className={\"mainPage__photosAndText__item__photo\"} alt={\"camera\"}/>\r\n                    <span className={\"mainPage__photosAndText__item__content\"}>\r\n                        <div className={\"mainPage__photosAndText__item__content__header\"}>\r\n                            Любая камера. Любой формат. Любая платформа\r\n                        </div>\r\n                        <div className={\"mainPage__photosAndText__item__content__text\"}>\r\n                            Программа поддерживает обработку видео в формате 8к.\r\n                            Работает одинаково хорошо на Windows, Mac OS или Linux.\r\n                            Поддерживает все распространенные форматы файлов и видео.\r\n                            Программа адаптирована под работу даже на слабых компьютерах\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div className={\"mainPage__photosAndText__item\"}>\r\n                    <span className={\"mainPage__photosAndText__item__content\"}>\r\n                        <div className={\"mainPage__photosAndText__item__content__header\"}>\r\n                            Все инструменты всегда под рукой\r\n                        </div>\r\n                        <div className={\"mainPage__photosAndText__item__content__text\"}>\r\n                            Профессиональный пакет позволяет получить доступ к синхронизации данных и настроек пользователя через единую облачную платформу.\r\n                            Модульная архитектура позволяет получать доступ к новейшим решения для видеобработки по щелчку мыши\r\n                        </div>\r\n                    </span>\r\n                    <img src={workingSpaceImg} className={\"mainPage__photosAndText__item__photo\"}\r\n                         alt={\"working place\"}/>\r\n                </div>\r\n                <div className={\"mainPage__photosAndText__item\"}>\r\n                    <img src={laptopImg} className={\"mainPage__photosAndText__item__photo\"} alt={\"laptop\"}/>\r\n                    <span className={\"mainPage__photosAndText__item__content\"}>\r\n                        <div className={\"mainPage__photosAndText__item__content__header\"}>\r\n                            Вы только начинаетете?\r\n                        </div>\r\n                        <div className={\"mainPage__photosAndText__item__content__text\"}>\r\n                            Набор инструментов достаточно прост чтобы в нем разобраться,\r\n                            все версии включают в себя достаточно обширный список инструкций, охватывающий все функции программы.\r\n                            Также, для всех, купивших полную версию, доступен курс по видеобработке от команды профессионалов Video Monkey\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div className={\"mainPage__photosAndText__phrase\"}>\r\n                    Дайте волю своему творческому потенциалу, <br/>\r\n                    позвольте программе решать рутинные задачи за вас!\r\n                </div>\r\n            </section>\r\n\r\n            <section className={\"mainPage__products\"}>\r\n                <div className={\"mainPage__products__column\"}>\r\n                    <div className={\"mainPage__products__column__header\"}>Video Monkey Free</div>\r\n                    <div className={\"mainPage__products__column__price\"}>Бесплатно</div>\r\n                    <div className={\"mainPage__products__column__features\"}>\r\n                        {features.free.map(text => <div className={\"mainPage__products__column__features__item\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>{text}</span>\r\n                        </div>)}\r\n                    </div>\r\n                    <NavLink to={\"/products\"}>\r\n                        <span className={\"mainPage__products__column__button\"}>\r\n                        Попробовать бесплатно\r\n                        </span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={\"mainPage__products__column\"}>\r\n                    <div className={\"mainPage__products__column__header\"}>Video Monkey Pro</div>\r\n                    <div className={\"mainPage__products__column__price\"}>6 990 рублей</div>\r\n                    <div className={\"mainPage__products__column__features\"}>\r\n                        {features.pro.map(text => <div className={\"mainPage__products__column__features__item\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>{text}</span>\r\n                        </div>)}\r\n                    </div>\r\n                    <NavLink to={\"/cart\"}>\r\n                         <span className={\"mainPage__products__column__button\"}>\r\n                        Добавить в корзину\r\n                        </span>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={\"mainPage__products__column\"}>\r\n                    <div className={\"mainPage__products__column__header\"}>Video Monkey Pro 365</div>\r\n                    <div className={\"mainPage__products__column__price\"}> 690 рублей ежемесячно</div>\r\n                    <div className={\"mainPage__products__column__features\"}>\r\n                        {features.pro.map(text => <div className={\"mainPage__products__column__features__item\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>{text}</span>\r\n                        </div>)}\r\n                    </div>\r\n                    <NavLink to={\"/cart\"}>\r\n                         <span className={\"mainPage__products__column__button\"}>\r\n                        Добавить в корзину\r\n                        </span>\r\n                    </NavLink>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;","const emailValidationRegex = new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i);\r\nconst passwordValidationRegexp = new RegExp(/^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})/);\r\n\r\nconst validate = ({isAuth, errors, values}) => {\r\n\r\n    const rules = {\r\n        email: (errors, value) => {\r\n            if (!value) {\r\n                errors.email = 'Обязательное поле';\r\n            } else if (\r\n                !emailValidationRegex.test(value)\r\n            ) {\r\n                errors.email = 'Неверный формат e-mail адреса';\r\n            }\r\n        },\r\n\r\n        password: (errors, value) => {\r\n            if (!value) {\r\n                errors.password = \"Обязательное поле\";\r\n            } else if (value.length < 6) {\r\n                errors.password = isAuth ? \"Неверный пароль\" : \"Пароль должен содержать 6 или более символов\";\r\n            } else if (!passwordValidationRegexp.test(value)) {\r\n                errors.password = isAuth ? \"Неверный пароль\" : \"Пароль должен содержать буквы и цифры\";\r\n            }\r\n        },\r\n\r\n        passwordRepeat: (errors, value) => {\r\n            if (!value) {\r\n                errors.passwordRepeat = \"Обязательное поле\";\r\n            } else if (value !== values.password) {\r\n                errors.passwordRepeat = \"Пароли не совпадают\";\r\n            }\r\n        },\r\n\r\n        name: (errors, value) => {\r\n            if (!value) {\r\n                errors.name = \"Обязательное поле\";\r\n            }\r\n        }\r\n    }\r\n\r\n    Object.keys(values).forEach(\r\n        key => rules[key] && rules[key](errors, values[key])\r\n    );\r\n}\r\n\r\nexport default validate;","export default (key, touched, errors) => {\r\n    if (touched[key]) {\r\n        if (errors[key]) {\r\n            return \"error\";\r\n        } else {\r\n            return \"success\"\r\n        }\r\n    } else {\r\n        return null;\r\n    }\r\n}","import React from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {Form,Input,Button} from \"antd\";\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\r\n\r\nimport validateForm from \"../../../utils/helpers/validateForm\";\r\n\r\nconst LoginForm = (props) => {\r\n\r\n    document.title = \"Авторизация - Video Monkey\";\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        dirty,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        handleReset,\r\n        isValid,\r\n    } = props;\r\n\r\n    if (props.isLoggedIn && !props.isVerified && !window.location.href.toString().includes(\"/login/verify\")) {\r\n        return (\r\n            <Redirect to={\"/login/verify\"}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={\"auth__container\"}>\r\n            <div className={\"auth__container__text\"}>\r\n                <div className=\"auth__container__text__block\">\r\n                    <div className=\"auth__container__text__block__heading\">\r\n                        Учетная запись Video Monkey\r\n                    </div>\r\n                    <div className=\"auth__container__text__block__description\">\r\n                        Войдите в учетную запись,\r\n                        чтобы просматривать свои покупки и статус подписки\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"auth__container__form\"}>\r\n\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Войти в аккаунт</h2>\r\n                    </div>\r\n\r\n                    <Form onFinish={handleSubmit}>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.email ? null : errors.email}\r\n                                   validateStatus={validateForm(\"email\", touched, errors)}>\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                   size={\"large\"}\r\n                                   placeholder=\"E-mail\"\r\n                                   value={values.email}\r\n                                   id={\"email\"}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.password ? null : errors.password}\r\n                                   validateStatus={validateForm(\"password\", touched, errors)}>\r\n                            <Input\r\n                                size={\"large\"}\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                type=\"password\"\r\n                                placeholder=\"Пароль\"\r\n                                value={values.password}\r\n                                id={\"password\"}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\"\r\n                                    size={\"large\"} onClick={handleSubmit}\r\n                                    disabled={props.isLoginFetching}>\r\n                                Войти в аккаунт\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        <div className=\"auth__container__form--error\">\r\n                            {props.loginError && props.loginErrorMessage}\r\n                        </div>\r\n\r\n                        <div className=\"auth__container__form__bottom\">\r\n                            <p>\r\n                                Еще нет аккаунта?\r\n                            </p>\r\n                            <Link to=\"/register\">\r\n                                Зарегистрироваться\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","const configs = {\r\n    \"BASE_URL\": \"https://video-monkey-api.herokuapp.com/\"\r\n}\r\n\r\nexport default configs;","import * as axios from \"axios\";\r\n\r\nimport configs from \"../../configs/configs\";\r\n\r\nconst axiosInstance = axios.create({\r\n        baseURL: configs.BASE_URL,\r\n        headers: {},\r\n    }\r\n);\r\n\r\nexport const UserAPI = () => {\r\n\r\n    if (window.localStorage.token && window.localStorage.token !== \"undefined\") {\r\n        axiosInstance.defaults.headers.common['token'] = window.localStorage.token;\r\n    }\r\n    return {\r\n\r\n        authMe() {\r\n            return axiosInstance.get(\"user/me\")\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        register(email, name, password) {\r\n            return axiosInstance.post(\"user/register\", {\r\n                email, name, password\r\n            })\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                })\r\n        },\r\n\r\n        login(email, password) {\r\n            return axiosInstance.post(\"user/login\", {\r\n                email, password\r\n            })\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        logout() {\r\n            return axiosInstance.delete(\"user/logout\")\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        deleteUser() {\r\n            return axiosInstance.delete(\"user\")\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        verifyUser(hash) {\r\n            return axiosInstance.get(`user/verify?hash=${hash}`)\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        cancelRegistration(hash) {\r\n            return axiosInstance.delete(`user/verify?hash=${hash}`)\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        },\r\n\r\n        resendConfirmationEmail(email) {\r\n            return axiosInstance.post(`user/verify/email`, {\r\n                email\r\n            })\r\n                .then((response) => {\r\n                    return {\r\n                        data: response.data,\r\n                        status: response.status\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    return {\r\n                        data: error.response.data,\r\n                        status: error.response.status\r\n                    }\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport const SupportAPI = {\r\n    sendComplaint(email, title, description, attachments) {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", email);\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n\r\n        if (attachments && attachments.length > 0) {\r\n            formData.append(\"files\", attachments);\r\n        }\r\n\r\n        return axiosInstance.post('support/complaint', formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n","import {UserAPI} from \"../api/api\";\r\n\r\n//Action Types\r\nconst AUTH = \"profile/AUTH\";\r\nconst SET_REGISTRATION_USER_DATA = \"profile/SET_REGISTRATION_USER_DATA\"\r\nconst LOGOUT = \"profile/LOGOUT\";\r\nconst LOGIN = \"profile/LOGIN\";\r\nconst SET_REGISTRATION_FETCHING = \"profile/SET_REGISTRATION_FETCHING\";\r\nconst SET_CONFIRMATION_IS_FETCHING = \"profile/SET_CONFIRMATION_IS_FETCHING\";\r\nconst SET_LOGIN_FETCHING = \"profile/SET_LOGIN_FETCHING\";\r\nconst SET_REGISTRATION_CANCEL_FETCHING = \"profile/SET_REGISTRATION_CANCEL_FETCHING\";\r\nconst SET_REGISTRATION_CANCEL_SUCCESS = \"profile/SET_REGISTRATION_CANCEL_SUCCESS\";\r\nconst SET_REGISTRATION_CANCEL_ERROR = \"profile/SET_REGISTRATION_CANCEL_ERROR\";\r\nconst SET_REGISTRATION_SUCCESS = \"profile/SET_REGISTRATION_SUCCESS\";\r\nconst SET_REGISTRATION_ERROR = \"profile/SET_REGISTRATION_ERROR\";\r\nconst SET_EMAIL_VERIFICATION_ERROR = \"profile/SET_EMAIL_VERIFICATION_ERROR\";\r\nconst SET_LOGIN_ERROR = \"profile/SET_LOGIN_ERROR\";\r\n\r\n//Initial State\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    authUserData: {\r\n        name: \"\",\r\n        email: \"\",\r\n        isVerified: false\r\n    },\r\n    registrationData: {\r\n        email: \"\"\r\n    },\r\n    userHash: \"\",\r\n    isRegistrationSuccessful: false,\r\n    isRegistrationCancelSuccessful: false,\r\n    authUserProfile: {},\r\n    isFetching: {\r\n        isRegistrationFetching: false,\r\n        isConfirmationFetching: false,\r\n        isRegistrationCancelFetching: false,\r\n        isLoginFetching: false\r\n    },\r\n    errors: {\r\n        emailVerificationError: false,\r\n        registrationCancelError: false,\r\n        registrationError: false,\r\n        registrationErrorMessage: \"\",\r\n        loginError: false,\r\n        loginErrorMessage: \"\"\r\n    },\r\n\r\n}\r\n\r\n//Reducer\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN:\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                authUserData: {\r\n                    ...state.authUserData,\r\n                    email: action.email,\r\n                    name: action.name,\r\n                    isVerified: action.isVerified\r\n                }\r\n            }\r\n        case LOGOUT: {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            }\r\n        }\r\n        case SET_REGISTRATION_USER_DATA:\r\n            return {\r\n                ...state,\r\n                registrationData: {\r\n                    ...state.registrationData,\r\n                    email: action.email\r\n                }\r\n            }\r\n        case SET_REGISTRATION_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: {\r\n                    ...state.isFetching,\r\n                    isRegistrationFetching: action.isRegistrationFetching\r\n                }\r\n            }\r\n        case SET_CONFIRMATION_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: {\r\n                    ...state.isFetching,\r\n                    isConfirmationFetching: action.isConfirmationFetching\r\n                }\r\n            }\r\n        case SET_LOGIN_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: {\r\n                    ...state.isFetching,\r\n                    isLoginFetching: action.isLoginFetching\r\n                }\r\n            }\r\n        case SET_REGISTRATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegistrationSuccessful: action.isRegistrationSuccessful\r\n            }\r\n        case SET_REGISTRATION_ERROR:\r\n            return {\r\n                ...state,\r\n                isRegistrationSuccessful: false,\r\n                errors: {\r\n                    ...state.errors,\r\n                    registrationError: action.isRegistrationError,\r\n                    registrationErrorMessage: action.message\r\n                }\r\n            }\r\n        case SET_EMAIL_VERIFICATION_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    emailVerificationError: action.isEmailVerificationError,\r\n                }\r\n            }\r\n        case SET_REGISTRATION_CANCEL_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    registrationCancelError: action.isRegistrationCancelError,\r\n                }\r\n            }\r\n        case SET_REGISTRATION_CANCEL_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: {\r\n                    ...state.isFetching,\r\n                    isRegistrationCancelFetching: action.isRegistrationCancelFetching\r\n                }\r\n            }\r\n        case SET_REGISTRATION_CANCEL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegistrationCancelSuccessful: action.isRegistrationCancelSuccessful\r\n            }\r\n\r\n        case SET_LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                errors: {\r\n                    ...state.errors,\r\n                    loginError: action.isLoginError,\r\n                    loginErrorMessage: action.loginErrorMessage\r\n                }\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n//Action Creators\r\nconst setRegistrationData = (email) =>\r\n    ({type: SET_REGISTRATION_USER_DATA, email});\r\nconst setRegistrationIsFetching = (isRegistrationFetching) =>\r\n    ({type: SET_REGISTRATION_FETCHING, isRegistrationFetching});\r\nconst setEmailConfirmationIsFetching = (isConfirmationFetching) =>\r\n    ({type: SET_CONFIRMATION_IS_FETCHING, isConfirmationFetching});\r\nconst setRegistrationSuccess = (isRegistrationSuccessful) =>\r\n    ({type: SET_REGISTRATION_SUCCESS, isRegistrationSuccessful});\r\nconst setRegistrationCancelSuccess = (isRegistrationCancelSuccessful) =>\r\n    ({type: SET_REGISTRATION_CANCEL_SUCCESS, isRegistrationCancelSuccessful});\r\nconst setRegistrationCancelIsFetching = (isRegistrationCancelFetching) =>\r\n    ({type: SET_REGISTRATION_CANCEL_FETCHING, isRegistrationCancelFetching});\r\nconst setRegistrationCancelError = (isRegistrationCancelError) =>\r\n    ({type: SET_REGISTRATION_CANCEL_ERROR, isRegistrationCancelError});\r\nconst setRegistrationError = (isRegistrationError, message) =>\r\n    ({type: SET_REGISTRATION_ERROR, isRegistrationError, message});\r\nconst setLoginError = (isLoginError, loginErrorMessage) =>\r\n    ({type: SET_LOGIN_ERROR, isLoginError, loginErrorMessage});\r\nconst setLoginIsFetching = (isLoginFetching) =>\r\n    ({type: SET_LOGIN_FETCHING, isLoginFetching});\r\nconst setEmailVerificationError = (isEmailVerificationError) =>\r\n    ({type: SET_EMAIL_VERIFICATION_ERROR, isEmailVerificationError});\r\nconst authUser = (email, name, isVerified) =>\r\n    ({type: AUTH, email, name, isVerified});\r\nconst logoutUser = () =>\r\n    ({type: LOGOUT});\r\n\r\n//Thunks\r\nexport const auth = () => async (dispatch) => {\r\n    if (window.localStorage.token && window.localStorage.token !== \"undefined\") {\r\n        try {\r\n            let responseData = await UserAPI().authMe();\r\n            if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n                dispatch(authUser(responseData.data.user.email, responseData.data.user.name, responseData.data.user.confirmed));\r\n                console.log(\"Successful authentication\");\r\n            } else if (responseData.message === \"Token is invalid or expired\" || responseData.status === 401) {\r\n                delete window.localStorage.token;\r\n                console.log(\"Authentication token is invalid or expired\");\r\n            }\r\n        } catch (err) {\r\n            console.log(\"Unsuccessful authentication: \" + err);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    dispatch(setLoginError(false, \"\"))\r\n    dispatch(setLoginIsFetching(true));\r\n    try {\r\n        let responseData = await UserAPI().login(email, password);\r\n        if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n            window.localStorage.token = responseData.data.token;\r\n            dispatch(authUser(email, responseData.data.user.name, responseData.data.user.confirmed));\r\n        } else {\r\n            dispatch(setLoginError(true, responseData.data.message))\r\n        }\r\n        dispatch(setLoginIsFetching(false));\r\n    } catch (err) {\r\n        dispatch(setLoginError(true, \"Some error occurred\"));\r\n        dispatch(setLoginIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let responseData = await UserAPI().logout();\r\n    if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n        delete window.localStorage.token;\r\n        dispatch(logoutUser());\r\n    }\r\n}\r\n\r\nexport const register = (email, name, password) => async (dispatch) => {\r\n\r\n    dispatch(setRegistrationIsFetching(true));\r\n    try {\r\n        let registerData = await UserAPI().register(email, name, password)\r\n        console.log(registerData);\r\n        if (registerData.data.resultCode === 0 || registerData.status === 200) {\r\n            dispatch(setRegistrationData(email));\r\n            dispatch(setRegistrationSuccess(true));\r\n        } else if (registerData.status === 500) {\r\n            dispatch(setEmailVerificationError(true));\r\n            dispatch(setRegistrationData(email));\r\n            dispatch(setRegistrationSuccess(true));\r\n        } else {\r\n            dispatch(setRegistrationError(true, registerData.data.message));\r\n        }\r\n        dispatch(setRegistrationIsFetching(false));\r\n    } catch (err) {\r\n        dispatch(setRegistrationError(true, \"Some error occurred\"));\r\n        dispatch(setRegistrationIsFetching(false));\r\n    }\r\n}\r\n\r\nexport const verifyUser = (hash) => async (dispatch) => {\r\n    dispatch(setEmailConfirmationIsFetching(true));\r\n    let responseData = await UserAPI().verifyUser(hash)\r\n    if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n        window.localStorage.token = responseData.data.token;\r\n        dispatch(authUser(responseData.data.user.email, responseData.data.user.name, responseData.data.user.confirmed));\r\n    } else {\r\n        dispatch(setEmailVerificationError(true));\r\n    }\r\n}\r\n\r\nexport const cancelRegistration = (hash) => async (dispatch) => {\r\n    dispatch(setRegistrationCancelIsFetching(true));\r\n    let responseData = await UserAPI().cancelRegistration(hash)\r\n    if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n        dispatch(setRegistrationCancelSuccess(true));\r\n    } else {\r\n        dispatch(setRegistrationCancelError(true));\r\n    }\r\n    dispatch(setRegistrationCancelIsFetching(false));\r\n\r\n}\r\n\r\nexport const resendVerificationEmail = (email) => async (dispatch) =>{\r\n    dispatch(setEmailConfirmationIsFetching(true));\r\n    dispatch(setEmailVerificationError(false));\r\n    let responseData = await UserAPI().resendConfirmationEmail(email)\r\n    if (responseData.data.resultCode === 0 || responseData.status === 200) {\r\n        dispatch(authUser(responseData.data.user.email, responseData.data.user.name, responseData.data.user.confirmed));\r\n    } else {\r\n        dispatch(setEmailVerificationError(true));\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withFormik} from \"formik\";\r\n\r\nimport validateForm from \"../../../utils/validate/validate\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {login} from \"../../../BLL/reducers/profileReducer\";\r\n\r\nconst formikConfig = {\r\n    enableReinitialize: true,\r\n    mapPropsToValues: values => ({email: \"\", password: \"\"}),\r\n    validate: values => {\r\n        const errors = {};\r\n        validateForm({isAuth: true, errors, values});\r\n        return errors;\r\n    },\r\n\r\n    handleSubmit: (values, formikBag) => {\r\n        formikBag.props.login(values.email, values.password);\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.userProfile.isLoggedIn,\r\n    isLoginFetching: state.userProfile.isFetching.isLoginFetching,\r\n    loginError: state.userProfile.errors.loginError,\r\n    loginErrorMessage: state.userProfile.errors.loginErrorMessage,\r\n    isVerified: state.userProfile.authUserData.isVerified\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        login\r\n    }),\r\n    withFormik(formikConfig)\r\n)(props => <LoginForm {...props}/>);","import React from 'react';\r\nimport {Redirect, Link} from \"react-router-dom\";\r\nimport {Form, Input, Button} from \"antd\";\r\nimport {UserOutlined, LockOutlined, MailOutlined} from '@ant-design/icons';\r\n\r\nimport validateForm from \"../../../utils/helpers/validateForm\";\r\n\r\nconst RegisterForm = (props) => {\r\n\r\n    document.title = \"Регистрация - Video Monkey\";\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        dirty,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        handleReset,\r\n        isValid,\r\n    } = props;\r\n\r\n    if (props.isRegistrationSuccessful) {\r\n        return (<Redirect to={\"/register/verify\"}/>)\r\n    }\r\n\r\n    return (\r\n        <div className={\"auth__container\"}>\r\n            <div className={\"auth__container__text\"}>\r\n                <div className=\"auth__container__text__block\">\r\n                    <div className=\"auth__container__text__block__heading\">\r\n                        Учетная запись Video Monkey\r\n                    </div>\r\n                    <div className=\"auth__container__text__block__description\">\r\n                        Создайте учетную запись,\r\n                        чтобы просматривать свои покупки и статус подписки\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"auth__container__form\"}>\r\n\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Зарегистрироваться</h2>\r\n                    </div>\r\n\r\n                    <Form onFinish={handleSubmit}>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.email ? null : errors.email}\r\n                                   validateStatus={validateForm(\"email\", touched, errors)}>\r\n                            <Input prefix={<MailOutlined className=\"site-form-item-icon\"/>}\r\n                                   size={\"large\"}\r\n                                   placeholder=\"E-mail\"\r\n                                   value={values.email}\r\n                                   id={\"email\"}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.name ? null : errors.name}\r\n                                   validateStatus={validateForm(\"name\", touched, errors)}>\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>}\r\n                                   size={\"large\"}\r\n                                   placeholder=\"Имя\"\r\n                                   value={values.name}\r\n                                   id={\"name\"}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.password ? null : errors.password}\r\n                                   validateStatus={validateForm(\"password\", touched, errors)}>\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                   size={\"large\"}\r\n                                   type=\"password\"\r\n                                   placeholder=\"Пароль\"\r\n                                   value={values.password}\r\n                                   id={\"password\"}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item hasFeedback\r\n                                   help={!touched.passwordRepeat ? null : errors.passwordRepeat}\r\n                                   validateStatus={validateForm(\"passwordRepeat\", touched, errors)}>\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\"/>}\r\n                                   size={\"large\"}\r\n                                   type=\"password\"\r\n                                   placeholder=\"Повторите пароль\"\r\n                                   value={values.passwordRepeat}\r\n                                   id={\"passwordRepeat\"}\r\n                                   onChange={handleChange}\r\n                                   onBlur={handleBlur}/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\"\r\n                                    size={\"large\"} onClick={handleSubmit}\r\n                                    disabled={props.isRegistrationFetching}>\r\n                                Зарегистрироваться\r\n                            </Button>\r\n                        </Form.Item>\r\n\r\n                        <div className=\"auth__container__form--error\">\r\n                            {props.registrationError && props.registrationErrorMessage}\r\n                        </div>\r\n\r\n                        <div className=\"auth__container__form__bottom\">\r\n                            <p>\r\n                                Уже есть аккаунт?\r\n                            </p>\r\n                            <Link to=\"/login\">\r\n                                Войти в аккаунт\r\n                            </Link>\r\n                        </div>\r\n\r\n                    </Form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;","import RegisterForm from \"./RegisterForm\";\r\nimport {withFormik} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\nimport {register} from \"../../../BLL/reducers/profileReducer\";\r\nimport validateForm from \"../../../utils/validate/validate\";\r\n\r\nconst formikConfig = {\r\n    enableReinitialize: true,\r\n    mapPropsToValues: values => ({\r\n        email: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        passwordRepeat: \"\"\r\n    }),\r\n    validate: values => {\r\n        const errors = {};\r\n        validateForm({isAuth: false, errors, values});\r\n        return errors;\r\n    },\r\n    handleSubmit: (values, formikBag) => {\r\n        formikBag.props.register(values.email, values.name, values.password);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isRegistrationSuccessful: state.userProfile.isRegistrationSuccessful,\r\n    isRegistrationFetching: state.userProfile.isFetching.isRegistrationFetching,\r\n    registrationError: state.userProfile.errors.registrationError,\r\n    registrationErrorMessage: state.userProfile.errors.registrationErrorMessage\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        register\r\n    }),\r\n    withFormik(formikConfig)\r\n)(props => <RegisterForm {...props}/>);","import React from 'react';\r\nimport {InfoCircleOutlined} from '@ant-design/icons';\r\n\r\nimport {errorCrossIcon, registrationReject, serverErrorIcon, submitIcon} from \"../../../assets\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst EmailConfirmationContentView = ({option, onCancelRegistration, onVerifyUser}) => {\r\n    switch (option) {\r\n        case \"initial\":\r\n\r\n            document.title = \"Подтверждение аккаунта - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Подтвердить аккаунт</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <InfoCircleOutlined/>\r\n                        <h3>\r\n                            Требуется подтверждение аккаунта\r\n                        </h3>\r\n                        <p>\r\n                            На Вашу почту отправлено письмо с ссылкой для подтверждение аккаунта.\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n\r\n        case \"login\":\r\n\r\n            document.title = \"Подтверждение аккаунта - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Подтвердить аккаунт</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <InfoCircleOutlined/>\r\n                        <h3>\r\n                            Требуется подтверждение аккаунта\r\n                        </h3>\r\n                        <p>\r\n                            На Вашу почту отправлено письмо с ссылкой для подтверждение аккаунта.\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n\r\n        case \"submit\":\r\n\r\n            document.title = \"Подтверждение аккаунта - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Подтвердить аккаунт</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={submitIcon} alt=\"Submit\"/>\r\n                        <h3>\r\n                            Ожидайте ответа\r\n                        </h3>\r\n                        <p>\r\n                            На сервер был отправлен запрос на подтверждение.\r\n                            Ожидайте ответа, в случае успеха, вы будут перенаправлены автоматически\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        case \"reject\":\r\n\r\n            document.title = \"Отмена регистрации - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Отмена регистрации</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={registrationReject} alt=\"Registration reject\"/>\r\n                        <br/>\r\n                        <p>\r\n                            Вы уверены, что хотите отменить регистацию? Для удаления аккаунта, перейдите\r\n                            <b onClick={onCancelRegistration}> по ссылке</b>.\r\n                            Если вы хотите продолжить регистацию, то <b onClick={onVerifyUser}>перейдите\r\n                            сюда</b>.\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        case \"reject--success\":\r\n\r\n            document.title = \"Отмена регистрации - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Удаление аккаунта</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={registrationReject} alt=\"Registration reject\"/>\r\n                        <h3>\r\n                            Аккаунт был успешно удален\r\n                        </h3>\r\n                        <br/>\r\n                        <p><b>На главную</b></p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        case \"reject--pending\":\r\n\r\n            document.title = \"Отмена регистрации - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Отмена регистрации</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={registrationReject} alt=\"Registration reject\"/>\r\n                        <h3>\r\n                            Ожидайте ответа сервера\r\n                        </h3>\r\n                        <p>\r\n                            Запрос на сервер был выслан. Ожидайте завершения операции\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n\r\n        case \"error\":\r\n\r\n            document.title = \"Ошибка сервера - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Ошибка</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={serverErrorIcon} alt={\"Error icon\"}/>\r\n                        <h3>\r\n                            Ошибка сервера!\r\n                        </h3>\r\n                        <p>\r\n                            Произошел сбой на сервере, в данный момент операция не может быть выполнена. Пожайлуста,\r\n                            попробуйте повторить позже\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        default:\r\n\r\n            document.title = \"Ошибка - Video Monkey\";\r\n\r\n            return (\r\n                <div className={\"auth__container__form__block\"}>\r\n\r\n                    <div className={\"auth__container__form__heading\"}>\r\n                        <h2>Ошибка</h2>\r\n                    </div>\r\n\r\n                    <div className={\"auth__container__form__block--confirmation\"}>\r\n                        <img src={errorCrossIcon} alt=\"Error cross icon\"/>\r\n                        <h3>\r\n                            Возникла ошибка!\r\n                        </h3>\r\n                        <p>\r\n                            В данный момент операция не может быть выполнена. Пожайлуста, попробуйте повторить позже\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nconst EmailConfirmation = ({option, onCancelRegistration, onVerifyUser,isLoggedIn,isVerified}) => {\r\n\r\n    if (isLoggedIn && isVerified) {\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={\"auth__container\"}>\r\n            <div className={\"auth__container__text\"}>\r\n                <div className=\"auth__container__text__block\">\r\n                    <div className=\"auth__container__text__block__heading\">\r\n                        Учетная запись Video Monkey\r\n                    </div>\r\n                    <div className=\"auth__container__text__block__description\">\r\n                        Создайте учетную запись,\r\n                        чтобы просматривать свои покупки и статус подписки\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={\"auth__container__form\"}>\r\n\r\n                <EmailConfirmationContentView option={option} onCancelRegistration={onCancelRegistration}\r\n                                              onVerifyUser={onVerifyUser}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmailConfirmation;","import React, {useEffect, useState} from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\nimport EmailConfirmation from \"./EmailConfirmation\";\r\nimport {cancelRegistration, resendVerificationEmail, verifyUser} from \"../../../BLL/reducers/profileReducer\";\r\n\r\nconst EmailConfirmationContainer = React.memo((props) => {\r\n\r\n    const hash = props.location.search.replace(\"?hash=\", \"\");\r\n\r\n    const {\r\n        isRegistrationCancelSuccessful,\r\n        isRegistrationCancelFetching,\r\n        isConfirmationFetching,\r\n        emailVerificationError,\r\n        registrationCancelError,\r\n        option,\r\n        verifyUser,\r\n        cancelRegistration,\r\n        resendVerificationEmail,\r\n        isLoggedIn,\r\n        authUserData\r\n    } = props;\r\n\r\n    const [newOption, setOption] = useState(option);\r\n\r\n    useEffect(() => {\r\n        if (isRegistrationCancelFetching) {\r\n            setOption(\"reject--pending\");\r\n        }\r\n        if (isRegistrationCancelSuccessful) {\r\n            setOption(\"reject--success\")\r\n        }\r\n        if (emailVerificationError || registrationCancelError) {\r\n            setOption(\"error\");\r\n        }\r\n        if (!isConfirmationFetching && option === \"submit\") {\r\n            verifyUser(hash)\r\n        }\r\n        if (!isConfirmationFetching && option === \"login\") {\r\n            resendVerificationEmail(authUserData.email)\r\n        }\r\n\r\n    }, [isRegistrationCancelSuccessful,\r\n        isRegistrationCancelFetching,\r\n        isConfirmationFetching,\r\n        emailVerificationError,\r\n        registrationCancelError,\r\n        option,\r\n        hash,\r\n        verifyUser,\r\n        cancelRegistration,\r\n        authUserData,\r\n        resendVerificationEmail\r\n    ])\r\n\r\n    const onCancelRegistration = () => {\r\n        cancelRegistration(hash);\r\n    }\r\n    const onVerifyUser = () => {\r\n        verifyUser(hash);\r\n    }\r\n\r\n    return (\r\n        <EmailConfirmation option={newOption}\r\n                           onCancelRegistration={onCancelRegistration}\r\n                           onVerifyUser={onVerifyUser}\r\n                           isLoggedIn={isLoggedIn}\r\n                           isVerified={authUserData.isVerified}/>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authUserData: state.userProfile.authUserData,\r\n    isRegistrationCancelSuccessful: state.userProfile.isRegistrationCancelSuccessful,\r\n    isRegistrationCancelFetching: state.userProfile.isFetching.isRegistrationCancelFetching,\r\n    isConfirmationFetching: state.userProfile.isFetching.isConfirmationFetching,\r\n    emailVerificationError: state.userProfile.errors.emailVerificationError,\r\n    registrationCancelError: state.userProfile.errors.registrationCancelError,\r\n    isLoggedIn: state.userProfile.isLoggedIn\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        cancelRegistration,\r\n        verifyUser,\r\n        resendVerificationEmail\r\n    }),\r\n    withRouter\r\n)(EmailConfirmationContainer);","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport \"./AuthPage.scss\";\r\nimport LoginForm from \"./LoginPage/LoginContainer\";\r\nimport RegisterForm from \"./RegisterPage/RegisterContainer\";\r\nimport EmailConfirmation from \"./EmailConfirmation/EmailConfirmationContainer\";\r\n\r\n\r\nconst AuthPage = (props) => {\r\n\r\n    if (props.isLoggedIn && props.isVerified) {\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <section\r\n            className={\"auth\"}>\r\n            <div>\r\n                <Switch>\r\n                    <Route path={\"/login/verify\"}\r\n                           render={() => (<EmailConfirmation option={\"login\"}/>)}/>\r\n\r\n                    <Route path={\"/login\"} render={() => (<LoginForm/>)}/>\r\n\r\n                    <Route path={\"/register/verify/reject\"}\r\n                           render={() => <EmailConfirmation option={\"reject\"}/>}/>\r\n\r\n                    <Route path={\"/register/verify/submit\"}\r\n                           render={() => <EmailConfirmation option={\"submit\"}/>}/>\r\n\r\n                    <Route path={\"/register/verify\"}\r\n                           render={() => <EmailConfirmation option={\"initial\"}/>}/>\r\n\r\n                    <Route path={\"/register\"} render={() => (<RegisterForm/>)}/>\r\n                </Switch>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.userProfile.isLoggedIn,\r\n    isVerified: state.userProfile.authUserData.isVerified\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(AuthPage);","//Action Types\r\n\r\n//Initial State\r\nlet initialState = {}\r\n\r\n//Reducer\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;\r\n\r\n//Action Creators\r\n\r\n//Thunks","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport {cartReducer, profileReducer} from \"../reducers\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        userProfile: profileReducer,\r\n        cart: cartReducer,\r\n    }\r\n)\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;\r\n\r\nwindow._store = store;","import React from 'react';\r\n\r\nconst ProfilePage = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>ProfilePage</h1>\r\n            <br/>\r\n            <br/>\r\n            Имя: {props.authUserData.name}\r\n            <br/>\r\n            Email: {props.authUserData.email}\r\n            <br/>\r\n            <br/>\r\n            <button onClick={props.logout}>Выйти</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport {logout} from \"../../BLL/reducers/profileReducer\";\r\n\r\nconst ProfilePageContainer = (props) => {\r\n\r\n    document.title = \"Профиль - Video Monkey\";\r\n\r\n    if (!props.isLoggedIn) {\r\n        return (\r\n            <Redirect to={\"/login\"}/>\r\n        );\r\n    }\r\n\r\n    if (props.isLoggedIn && !props.authUserData.isVerified) {\r\n        return (\r\n            <Redirect to={`/login/verify`}/>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ProfilePage authUserData={props.authUserData}\r\n                         logout={props.logout}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.userProfile.isLoggedIn,\r\n    authUserData: state.userProfile.authUserData\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    logout\r\n}))(ProfilePageContainer);","import React, {useState} from 'react';\r\nimport {Upload, Radio, Input, Button} from \"antd\";\r\nimport {UploadOutlined, CheckOutlined} from '@ant-design/icons';\r\n\r\nimport \"./SupportPage.scss\";\r\n\r\nconst TextArea = Input.TextArea;\r\n\r\nconst SupportPage = ({onFormUpload}) => {\r\n\r\n    const [selectedOption, selectOption] = useState(1);\r\n    const [attachedFiles, addFiles] = useState([]);\r\n\r\n    const onSelectRadio = e => {\r\n        selectOption(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <div className={\"support\"}>\r\n\r\n            <div className=\"support__heading\">\r\n                <h1>Добро пожаловать на страницу поддержки</h1>\r\n                <p>Для того, чтобы рассказать нам о возникших проблемах, заполните форму ниже.\r\n                    В случае необходимости, вы можете приложить скриншоты, показывающие ошибку</p>\r\n            </div>\r\n\r\n            <div className=\"support__form\">\r\n\r\n                <div className=\"support__form__email\">\r\n                    <h2>Email</h2>\r\n                    <div className=\"support__form__block\">\r\n                        <Input placeholder=\"Введите email\"/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"support__form__selections\">\r\n                    <h2>Выберети проблему из списка или укажите свою</h2>\r\n                    <div className=\"support__form__block\">\r\n                        <Radio.Group className=\"support__form__selections__group\"\r\n                                     onChange={onSelectRadio} value={selectedOption}>\r\n                            <Radio className={\"support__form__selections__group__radio\"} value={1}>\r\n                                Ошибки при работе с сайтом\r\n                            </Radio>\r\n                            <Radio className={\"support__form__selections__group__radio\"} value={2}>\r\n                                Проблемы при работе с видеоредактором Video Monkey\r\n                            </Radio>\r\n                            <Radio className={\"support__form__selections__group__radio\"} value={3}>\r\n                                Не проходит оплата на сайте\r\n                            </Radio>\r\n                            <Radio className={\"support__form__selections__group__radio\"} value={4}>\r\n                                Другое (укажите в форме ниже)\r\n                                <div>\r\n                                    <Input className={\"support__form__selections__group__input\"}\r\n                                           disabled={selectedOption !== 4}\r\n                                           placeholder={\"Укажите свою проблему\"}/>\r\n                                </div>\r\n                            </Radio>\r\n                        </Radio.Group>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"support__form__description\">\r\n                    <h2>Краткое описание</h2>\r\n                    <div className=\"support__form__block\">\r\n                        <TextArea placeholder={\"Опишите возникшую проблему\"}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"support__form__attachments\">\r\n                    <Upload\r\n                        action={(file) => {\r\n                            addFiles([...attachedFiles, file])\r\n                        }}\r\n                        listType=\"picture\"\r\n                        defaultFileList={[...attachedFiles]}>\r\n                        <Button icon={<UploadOutlined/>} className={\"support__form__attachments__uploadButton\"}>Прикрепить\r\n                            скриншоты</Button>\r\n                    </Upload>\r\n                </div>\r\n\r\n                <div className=\"support__form__sendButton\">\r\n                    <Button icon={<CheckOutlined/>}>Отправить</Button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SupportPage;","import React from \"react\";\r\n\r\nimport SupportPage from \"./SupportPage\";\r\n\r\nconst SupportPageContainer = () => {\r\n\r\n    document.title = \"Поддержка - Video Monkey\";\r\n\r\n    return (\r\n        <SupportPage/>\r\n    );\r\n};\r\n\r\nexport default SupportPageContainer;","import React, {useState} from 'react';\r\n\r\nimport \"./PresentationPage.scss\"\r\nimport {checkedGreenIcon, softwareLogo} from \"../../assets\";\r\nimport {withRouter, NavLink} from \"react-router-dom\";\r\n\r\nconst Slides = ({slideNumber}) => {\r\n    switch (slideNumber) {\r\n        case 0:\r\n            return (\r\n\r\n                <div className=\"presentation__block__first\">\r\n                    <div className=\"first\">\r\n                        <section className={\"presentation__block__first__top\"}>\r\n                            <div className={\"presentation__block__first__top__content\"}>\r\n                                <div className={\"presentation__block__first__top__content__top\"}>\r\n                                    <img src={softwareLogo}\r\n                                         className={\"presentation__block__first__top__content__top__logo\"}\r\n                                         alt={\"software logo\"}/>\r\n                                    <div className={\"presentation__block__first__top__content__top__text\"}>\r\n                                        <div\r\n                                            className={\"presentation__block__first__top__content__top__text__name\"}>Video\r\n                                            Monkey 2020\r\n                                        </div>\r\n                                        <div className={\"presentation__block__first__top__content__top__text__phrase\"}>\r\n                                            Простой инструмент для выдающихся творений\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 1:\r\n            return (<div className=\"presentation__block\">\r\n                    <div className=\"presentation__heading\">\r\n                        <h1>\r\n                            Описание сайта\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <p>\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Продукты: <i>Video Monkey Free, Video Monkey Pro</i></span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Продукты-конкуренты: <i>Movavi Videoeditor, Sony Vegas Pro, Adobe Premiere Pro</i></span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Основная задача сайта: <i>продажа видеоредактора</i></span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Дополнительные задачи:\r\n                            <div className={\"presentation__line__inner\"}>\r\n                                <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                <span><i>Информирование о продукте</i></span>\r\n                            </div>\r\n                              <div className={\"presentation__line__inner\"}>\r\n                                <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                <span><i>Коммуникация с текущими клиентами (личный кабинет)</i></span>\r\n                            </div>\r\n                              <div className={\"presentation__line__inner\"}>\r\n                                <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                <span><i>Канал обратной связи</i></span>\r\n                            </div>\r\n\r\n                        </span>\r\n                        </div>\r\n\r\n                    </p>\r\n                </div>\r\n            );\r\n        case 2:\r\n            return (\r\n                <div className=\"presentation__block\">\r\n                    <div className=\"presentation__heading\">\r\n                        <h1>\r\n                            Описание целевой аудитории\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Free:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Студенты, не специализирующиеся в монтаже видео</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Школьники</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Пользователи ПК, которым необходимо выполнить единичный проект, связанный с видеообработкой</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Pro:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Профессиональные видеомонтажеры</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Штатные маркетологи в компаниях</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Блогеры</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n\r\n        case 3:\r\n            return (\r\n                <div className=\"presentation__block\">\r\n                    <div className=\"presentation__heading\">\r\n                        <h1>\r\n                            Цели ЦА на сайте\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Free хочет:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Узнать наличие бесплатной версии</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Узнать функционал бесплатной версии</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Найти, как пользоваться инструментом</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Pro хочет:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Ознакомиться с полным функционалом инструмента</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Оценить целесообразность приобретения инструмента</span>\r\n                                </div>\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Продлить подписку</span>\r\n                                </div>\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Узнать, когда истекает срок действия подписки</span>\r\n                                </div>\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Сообщить о возникших проблемах</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        case 4:\r\n            return (\r\n                <div className=\"presentation__block\">\r\n                    <div className=\"presentation__heading\">\r\n                        <h1>\r\n                            Методы продвижения - Реклама\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Free:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Поисковая реклама</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Реклама на схожих по тематике сайтах</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Pro:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Наилучшим методом продвижения будет являться качественно выполненный продукт, который будет авторитетным в профессиональной среде</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Сотрудничество со школами видеомонтажа</span>\r\n                                </div>\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Поисковая реклама Таргетированная реклама</span>\r\n                                </div>\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Блоги начинающих видеомонтажеров</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n            case 5:\r\n            return (\r\n                <div className=\"presentation__block\">\r\n                    <div className=\"presentation__heading\">\r\n                        <h1>\r\n                            Методы продвижения - SEO\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className={\"presentation__line\"}>\r\n                            <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                            <span>Целевая аудитория Video Monkey Free:\r\n                                <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>SEO-оптимизация необходима для данной категории ЦА в наибольшей степени</span>\r\n                                </div>\r\n                                  <div className={\"presentation__line__inner\"}>\r\n                                    <img src={checkedGreenIcon} alt={\"check\"}/>\r\n                                    <span>Цель: топ-5 по запросам бесплатный видеоредактор, простой видеоредактор, видеоредактор для начинающих</span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        default:\r\n            return (\r\n                <div>Here should be the slides</div>\r\n            );\r\n    }\r\n}\r\n\r\n\r\nconst PresentationPage = (props) => {\r\n\r\n        let page = props.match.params.page;\r\n\r\n        document.title = \"Презентация - Video Monkey\";\r\n\r\n        return (\r\n            <div className=\"presentation\">\r\n\r\n                {Number(page) !== 0 ?\r\n                <NavLink to={`/admin/presentation/${Number(page) - 1}`}>\r\n                    <span className={\"presentation__buttonLeft\"}>\r\n                        <p>Влево</p>\r\n                    </span>\r\n                </NavLink>\r\n                    :\r\n                    <span className=\"hidden\"></span>\r\n                }\r\n\r\n                <Slides slideNumber={Number(page)}/>\r\n\r\n                {Number(page) !== 5 ?\r\n                <NavLink to={`/admin/presentation/${Number(page) + 1}`}>\r\n                    <span className={\"presentation__buttonRight\"}>\r\n                        <p>Вправо</p>\r\n                    </span>\r\n                </NavLink>\r\n                    :\r\n                    <span className=\"hidden\"></span>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default withRouter(PresentationPage);","import React, {Suspense} from 'react';\nimport {Switch, Route, HashRouter} from \"react-router-dom\";\nimport {connect, Provider} from \"react-redux\";\n\nimport \"./styles/index.scss\";\nimport Preloader from \"./components/Preloader/Preloader\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport MainPage from \"./pages/MainPage/MainPage\";\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\nimport store from \"./BLL/store/store\";\nimport {auth} from \"./BLL/reducers/profileReducer\";\nimport ProfilePage from \"./pages/Profile/ProfilePageContainer\";\nimport SupportPage from \"./pages/Support/SupportPageContainer\";\nimport PresentationPage from \"./pages/Presentation/PresentationPage\";\n\nconst NotFound = React.lazy(() => import(\"./pages/NotFoundPage/NotFound\"));\n\nclass App extends React.Component {\n\n    catchAllUnhandledErrors = () => {\n        alert(\"Some error occurred\");\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n        if (!this.props.isLoggedIn)\n            this.props.auth();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n\n    render() {\n        return (\n            <div className={\"app-wrapper\"}>\n                <Header/>\n\n                <div className={\"app-wrapper__mainContent\"}>\n                    <Suspense fallback={<Preloader large/>}>\n                        <Switch>\n                            <Route path=\"/\" exact render={() => <MainPage/>}/>\n\n                            <Route path={\"/profile\"} render={() => <ProfilePage/>}/>\n\n                            <Route path={[\"/register\", \"/login\"]} render={() => <AuthPage/>}/>\n\n                            <Route path={\"/support\"} render={()=><SupportPage/>}/>\n\n                            <Route path={\"/admin/presentation/:page\"} render={()=><PresentationPage/>}/>\n\n                            <Route path=\"*\" render={() => <NotFound/>}/>\n                        </Switch>\n                    </Suspense>\n                </div>\n\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.userProfile.isLoggedIn\n})\n\nconst AppContainer = connect(mapStateToProps, {\n    auth\n})(App);\n\nconst MonkeyApp = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    );\n}\nexport default MonkeyApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","//icons and photos for whole app\r\nexport {default as siteUpperLogo} from \"./svgIcons/gorilla.svg\";\r\nexport {default as reactLogo} from \"./svgIcons/gorilla.svg\";\r\nexport {default as monkeyLogo} from \"./svgIcons/monkey-facing-right.svg\";\r\nexport {default as userIcon} from \"./svgIcons/user.svg\";\r\nexport {default as shoppingCartIcon} from \"./svgIcons/shopping-cart.svg\";\r\nexport {default as exclamationIcon} from \"./svgIcons/exclamation.svg\";\r\nexport {default as checkedIcon} from \"./svgIcons/checked.svg\";\r\nexport {default as checkedGreenIcon} from \"./svgIcons/checkedGreen.svg\";\r\nexport {default as preloader} from \"./preloader/Spinner-1.3s-200px.svg\";\r\nexport {default as softwareLogo} from \"./svgIcons/softwareLogo.svg\";\r\n\r\n//social networks links\r\nexport {default as instagramLogo} from \"./svgIcons/instagram.svg\";\r\nexport {default as vkLogo} from \"./svgIcons/vk.svg\";\r\nexport {default as youtubeLogo} from \"./svgIcons/youtube.svg\";\r\nexport {default as facebookLogo} from \"./svgIcons/facebook.svg\";\r\n\r\n//icons\r\nexport {default as cameraIcon} from \"./svgIcons/camera.svg\";\r\nexport {default as computerIcon} from \"./svgIcons/computer.svg\";\r\nexport {default as spinIcon} from \"./svgIcons/spin.svg\";\r\nexport {default as videoCameraIcon} from \"./svgIcons/video-camera.svg\";\r\nexport {default as videoPlayerIcon} from \"./svgIcons/video-player.svg\";\r\nexport {default as headphonesIcon} from \"./svgIcons/headphones.svg\";\r\nexport {default as spinWithButton} from \"./svgIcons/spinWithButton.svg\";\r\n\r\n//photos Main Page\r\nexport {default as cameraImg} from \"./photos/camera.jpg\";\r\nexport {default as laptopImg} from \"./photos/laptop.jpg\";\r\nexport {default as workingSpaceImg} from \"./photos/workingPlace.jpg\";\r\nexport {default as alpsImg} from \"./photos/alps.jpg\";\r\n\r\n//404 not found page\r\nexport {default as notFoundImg} from \"./photos/404notFound.jpg\";\r\n\r\n//Auth page\r\nexport {default as communityImg} from \"./photos/community.png\";\r\nexport {default as serverErrorIcon} from \"./svgIcons/greenServerError.svg\";\r\nexport {default as errorCrossIcon} from \"./svgIcons/errorCross.svg\";\r\nexport {default as registrationReject} from \"./svgIcons/registrationReject.svg\";\r\nexport {default as submitIcon} from \"./svgIcons/submit.svg\";","module.exports = __webpack_public_path__ + \"static/media/gorilla.633c0d0d.svg\";"],"sourceRoot":""}